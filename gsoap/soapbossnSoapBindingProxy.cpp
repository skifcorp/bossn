/* soapbossnSoapBindingProxy.cpp
   Generated by gSOAP 2.8.14 from webservice.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under ONE of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "soapbossnSoapBindingProxy.h"

bossnSoapBindingProxy::bossnSoapBindingProxy()
{	this->soap = soap_new();
	this->own = true;
	bossnSoapBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

bossnSoapBindingProxy::bossnSoapBindingProxy(struct soap *_soap)
{	this->soap = _soap;
	this->own = false;
	bossnSoapBindingProxy_init(_soap->imode, _soap->omode);
}

bossnSoapBindingProxy::bossnSoapBindingProxy(const char *url)
{	this->soap = soap_new();
	this->own = true;
	bossnSoapBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

bossnSoapBindingProxy::bossnSoapBindingProxy(soap_mode iomode)
{	this->soap = soap_new();
	this->own = true;
	bossnSoapBindingProxy_init(iomode, iomode);
}

bossnSoapBindingProxy::bossnSoapBindingProxy(const char *url, soap_mode iomode)
{	this->soap = soap_new();
	this->own = true;
	bossnSoapBindingProxy_init(iomode, iomode);
	soap_endpoint = url;
}

bossnSoapBindingProxy::bossnSoapBindingProxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->own = true;
	bossnSoapBindingProxy_init(imode, omode);
}

bossnSoapBindingProxy::~bossnSoapBindingProxy()
{	if (this->own)
		soap_free(this->soap);
}

void bossnSoapBindingProxy::bossnSoapBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
	{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"ns1", "http://localhost/bossn", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this->soap, namespaces);
}

void bossnSoapBindingProxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void bossnSoapBindingProxy::reset()
{	destroy();
	soap_done(this->soap);
	soap_init(this->soap);
	bossnSoapBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void bossnSoapBindingProxy::soap_noheader()
{	this->soap->header = NULL;
}

const SOAP_ENV__Header *bossnSoapBindingProxy::soap_header()
{	return this->soap->header;
}

const SOAP_ENV__Fault *bossnSoapBindingProxy::soap_fault()
{	return this->soap->fault;
}

const char *bossnSoapBindingProxy::soap_fault_string()
{	return *soap_faultstring(this->soap);
}

const char *bossnSoapBindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this->soap);
}

int bossnSoapBindingProxy::soap_close_socket()
{	return soap_closesock(this->soap);
}

int bossnSoapBindingProxy::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

void bossnSoapBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void bossnSoapBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *bossnSoapBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int bossnSoapBindingProxy::send_AppearedResponse(const char *endpoint, const char *soap_action, _ns1__AppearedResponse *ns1__AppearedResponse)
{	struct soap *soap = this->soap;
	struct __ns1__AppearedResponse soap_tmp___ns1__AppearedResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/bossn/ws/bossn.1cws";
	if (soap_action == NULL)
		soap_action = "http://localhost/bossn#bossn:AppearedResponse";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AppearedResponse.ns1__AppearedResponse = ns1__AppearedResponse;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__AppearedResponse(soap, &soap_tmp___ns1__AppearedResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AppearedResponse(soap, &soap_tmp___ns1__AppearedResponse, "-ns1:AppearedResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AppearedResponse(soap, &soap_tmp___ns1__AppearedResponse, "-ns1:AppearedResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int bossnSoapBindingProxy::recv_AppearedResponse(struct __ns1__AppearedResponse& tmp)
{	struct soap *soap = this->soap;

	struct __ns1__AppearedResponse *_param_1 = &tmp;
	soap_default___ns1__AppearedResponse(soap, _param_1);
	soap_begin(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ns1__AppearedResponse(soap, _param_1, "-ns1:AppearedResponse", NULL);
	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
		soap->error = SOAP_NO_METHOD;
	if (soap->error
	 || soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int bossnSoapBindingProxy::Appeared(const char *endpoint, const char *soap_action, _ns1__Appeared *ns1__Appeared, _ns1__AppearedResponse *ns1__AppearedResponse)
{	struct soap *soap = this->soap;
	struct __ns1__Appeared soap_tmp___ns1__Appeared;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/bossn/ws/bossn.1cws";
	if (soap_action == NULL)
		soap_action = "http://localhost/bossn#bossn:Appeared";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__Appeared.ns1__Appeared = ns1__Appeared;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__Appeared(soap, &soap_tmp___ns1__Appeared);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__Appeared(soap, &soap_tmp___ns1__Appeared, "-ns1:Appeared", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__Appeared(soap, &soap_tmp___ns1__Appeared, "-ns1:Appeared", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__AppearedResponse)
		return soap_closesock(soap);
	ns1__AppearedResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AppearedResponse->soap_get(soap, "ns1:AppearedResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int bossnSoapBindingProxy::send_ExchangeResponse(const char *endpoint, const char *soap_action, _ns1__ExchangeResponse *ns1__ExchangeResponse)
{	struct soap *soap = this->soap;
	struct __ns1__ExchangeResponse soap_tmp___ns1__ExchangeResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/bossn/ws/bossn.1cws";
	if (soap_action == NULL)
		soap_action = "http://localhost/bossn#bossn:ExchangeResponse";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__ExchangeResponse.ns1__ExchangeResponse = ns1__ExchangeResponse;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__ExchangeResponse(soap, &soap_tmp___ns1__ExchangeResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ExchangeResponse(soap, &soap_tmp___ns1__ExchangeResponse, "-ns1:ExchangeResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ExchangeResponse(soap, &soap_tmp___ns1__ExchangeResponse, "-ns1:ExchangeResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int bossnSoapBindingProxy::recv_ExchangeResponse(struct __ns1__ExchangeResponse& tmp)
{	struct soap *soap = this->soap;

	struct __ns1__ExchangeResponse *_param_2 = &tmp;
	soap_default___ns1__ExchangeResponse(soap, _param_2);
	soap_begin(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ns1__ExchangeResponse(soap, _param_2, "-ns1:ExchangeResponse", NULL);
	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
		soap->error = SOAP_NO_METHOD;
	if (soap->error
	 || soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int bossnSoapBindingProxy::Exchange(const char *endpoint, const char *soap_action, _ns1__Exchange *ns1__Exchange, _ns1__ExchangeResponse *ns1__ExchangeResponse)
{	struct soap *soap = this->soap;
	struct __ns1__Exchange soap_tmp___ns1__Exchange;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/bossn/ws/bossn.1cws";
	if (soap_action == NULL)
		soap_action = "http://localhost/bossn#bossn:Exchange";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__Exchange.ns1__Exchange = ns1__Exchange;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__Exchange(soap, &soap_tmp___ns1__Exchange);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__Exchange(soap, &soap_tmp___ns1__Exchange, "-ns1:Exchange", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__Exchange(soap, &soap_tmp___ns1__Exchange, "-ns1:Exchange", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__ExchangeResponse)
		return soap_closesock(soap);
	ns1__ExchangeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ExchangeResponse->soap_get(soap, "ns1:ExchangeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int bossnSoapBindingProxy::send_AcceptResponse(const char *endpoint, const char *soap_action, _ns1__AcceptResponse *ns1__AcceptResponse)
{	struct soap *soap = this->soap;
	struct __ns1__AcceptResponse soap_tmp___ns1__AcceptResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/bossn/ws/bossn.1cws";
	if (soap_action == NULL)
		soap_action = "http://localhost/bossn#bossn:AcceptResponse";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AcceptResponse.ns1__AcceptResponse = ns1__AcceptResponse;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__AcceptResponse(soap, &soap_tmp___ns1__AcceptResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AcceptResponse(soap, &soap_tmp___ns1__AcceptResponse, "-ns1:AcceptResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AcceptResponse(soap, &soap_tmp___ns1__AcceptResponse, "-ns1:AcceptResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int bossnSoapBindingProxy::recv_AcceptResponse(struct __ns1__AcceptResponse& tmp)
{	struct soap *soap = this->soap;

	struct __ns1__AcceptResponse *_param_3 = &tmp;
	soap_default___ns1__AcceptResponse(soap, _param_3);
	soap_begin(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ns1__AcceptResponse(soap, _param_3, "-ns1:AcceptResponse", NULL);
	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
		soap->error = SOAP_NO_METHOD;
	if (soap->error
	 || soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int bossnSoapBindingProxy::Accept(const char *endpoint, const char *soap_action, _ns1__Accept *ns1__Accept, _ns1__AcceptResponse *ns1__AcceptResponse)
{	struct soap *soap = this->soap;
	struct __ns1__Accept soap_tmp___ns1__Accept;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/bossn/ws/bossn.1cws";
	if (soap_action == NULL)
		soap_action = "http://localhost/bossn#bossn:Accept";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__Accept.ns1__Accept = ns1__Accept;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__Accept(soap, &soap_tmp___ns1__Accept);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__Accept(soap, &soap_tmp___ns1__Accept, "-ns1:Accept", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__Accept(soap, &soap_tmp___ns1__Accept, "-ns1:Accept", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__AcceptResponse)
		return soap_closesock(soap);
	ns1__AcceptResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AcceptResponse->soap_get(soap, "ns1:AcceptResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int bossnSoapBindingProxy::send_DisappearedResponse(const char *endpoint, const char *soap_action, _ns1__DisappearedResponse *ns1__DisappearedResponse)
{	struct soap *soap = this->soap;
	struct __ns1__DisappearedResponse soap_tmp___ns1__DisappearedResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/bossn/ws/bossn.1cws";
	if (soap_action == NULL)
		soap_action = "http://localhost/bossn#bossn:DisappearedResponse";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__DisappearedResponse.ns1__DisappearedResponse = ns1__DisappearedResponse;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__DisappearedResponse(soap, &soap_tmp___ns1__DisappearedResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DisappearedResponse(soap, &soap_tmp___ns1__DisappearedResponse, "-ns1:DisappearedResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DisappearedResponse(soap, &soap_tmp___ns1__DisappearedResponse, "-ns1:DisappearedResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int bossnSoapBindingProxy::recv_DisappearedResponse(struct __ns1__DisappearedResponse& tmp)
{	struct soap *soap = this->soap;

	struct __ns1__DisappearedResponse *_param_4 = &tmp;
	soap_default___ns1__DisappearedResponse(soap, _param_4);
	soap_begin(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ns1__DisappearedResponse(soap, _param_4, "-ns1:DisappearedResponse", NULL);
	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
		soap->error = SOAP_NO_METHOD;
	if (soap->error
	 || soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int bossnSoapBindingProxy::Disappeared(const char *endpoint, const char *soap_action, _ns1__Disappeared *ns1__Disappeared, _ns1__DisappearedResponse *ns1__DisappearedResponse)
{	struct soap *soap = this->soap;
	struct __ns1__Disappeared soap_tmp___ns1__Disappeared;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/bossn/ws/bossn.1cws";
	if (soap_action == NULL)
		soap_action = "http://localhost/bossn#bossn:Disappeared";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__Disappeared.ns1__Disappeared = ns1__Disappeared;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__Disappeared(soap, &soap_tmp___ns1__Disappeared);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__Disappeared(soap, &soap_tmp___ns1__Disappeared, "-ns1:Disappeared", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__Disappeared(soap, &soap_tmp___ns1__Disappeared, "-ns1:Disappeared", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__DisappearedResponse)
		return soap_closesock(soap);
	ns1__DisappearedResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DisappearedResponse->soap_get(soap, "ns1:DisappearedResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int bossnSoapBindingProxy::send_AppearedResponse_(const char *endpoint, const char *soap_action, _ns1__AppearedResponse *ns1__AppearedResponse)
{	struct soap *soap = this->soap;
	struct __ns1__AppearedResponse_ soap_tmp___ns1__AppearedResponse_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/bossn/ws/bossn.1cws";
	if (soap_action == NULL)
		soap_action = "http://localhost/bossn#bossn:AppearedResponse";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AppearedResponse_.ns1__AppearedResponse = ns1__AppearedResponse;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__AppearedResponse_(soap, &soap_tmp___ns1__AppearedResponse_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AppearedResponse_(soap, &soap_tmp___ns1__AppearedResponse_, "-ns1:AppearedResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AppearedResponse_(soap, &soap_tmp___ns1__AppearedResponse_, "-ns1:AppearedResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int bossnSoapBindingProxy::recv_AppearedResponse_(struct __ns1__AppearedResponse_& tmp)
{	struct soap *soap = this->soap;

	struct __ns1__AppearedResponse_ *_param_5 = &tmp;
	soap_default___ns1__AppearedResponse_(soap, _param_5);
	soap_begin(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ns1__AppearedResponse_(soap, _param_5, "-ns1:AppearedResponse", NULL);
	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
		soap->error = SOAP_NO_METHOD;
	if (soap->error
	 || soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int bossnSoapBindingProxy::Appeared_(const char *endpoint, const char *soap_action, _ns1__Appeared *ns1__Appeared, _ns1__AppearedResponse *ns1__AppearedResponse)
{	struct soap *soap = this->soap;
	struct __ns1__Appeared_ soap_tmp___ns1__Appeared_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/bossn/ws/bossn.1cws";
	if (soap_action == NULL)
		soap_action = "http://localhost/bossn#bossn:Appeared";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__Appeared_.ns1__Appeared = ns1__Appeared;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__Appeared_(soap, &soap_tmp___ns1__Appeared_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__Appeared_(soap, &soap_tmp___ns1__Appeared_, "-ns1:Appeared", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__Appeared_(soap, &soap_tmp___ns1__Appeared_, "-ns1:Appeared", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__AppearedResponse)
		return soap_closesock(soap);
	ns1__AppearedResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AppearedResponse->soap_get(soap, "ns1:AppearedResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int bossnSoapBindingProxy::send_ExchangeResponse_(const char *endpoint, const char *soap_action, _ns1__ExchangeResponse *ns1__ExchangeResponse)
{	struct soap *soap = this->soap;
	struct __ns1__ExchangeResponse_ soap_tmp___ns1__ExchangeResponse_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/bossn/ws/bossn.1cws";
	if (soap_action == NULL)
		soap_action = "http://localhost/bossn#bossn:ExchangeResponse";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__ExchangeResponse_.ns1__ExchangeResponse = ns1__ExchangeResponse;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__ExchangeResponse_(soap, &soap_tmp___ns1__ExchangeResponse_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ExchangeResponse_(soap, &soap_tmp___ns1__ExchangeResponse_, "-ns1:ExchangeResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ExchangeResponse_(soap, &soap_tmp___ns1__ExchangeResponse_, "-ns1:ExchangeResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int bossnSoapBindingProxy::recv_ExchangeResponse_(struct __ns1__ExchangeResponse_& tmp)
{	struct soap *soap = this->soap;

	struct __ns1__ExchangeResponse_ *_param_6 = &tmp;
	soap_default___ns1__ExchangeResponse_(soap, _param_6);
	soap_begin(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ns1__ExchangeResponse_(soap, _param_6, "-ns1:ExchangeResponse", NULL);
	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
		soap->error = SOAP_NO_METHOD;
	if (soap->error
	 || soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int bossnSoapBindingProxy::Exchange_(const char *endpoint, const char *soap_action, _ns1__Exchange *ns1__Exchange, _ns1__ExchangeResponse *ns1__ExchangeResponse)
{	struct soap *soap = this->soap;
	struct __ns1__Exchange_ soap_tmp___ns1__Exchange_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/bossn/ws/bossn.1cws";
	if (soap_action == NULL)
		soap_action = "http://localhost/bossn#bossn:Exchange";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__Exchange_.ns1__Exchange = ns1__Exchange;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__Exchange_(soap, &soap_tmp___ns1__Exchange_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__Exchange_(soap, &soap_tmp___ns1__Exchange_, "-ns1:Exchange", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__Exchange_(soap, &soap_tmp___ns1__Exchange_, "-ns1:Exchange", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__ExchangeResponse)
		return soap_closesock(soap);
	ns1__ExchangeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ExchangeResponse->soap_get(soap, "ns1:ExchangeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int bossnSoapBindingProxy::send_AcceptResponse_(const char *endpoint, const char *soap_action, _ns1__AcceptResponse *ns1__AcceptResponse)
{	struct soap *soap = this->soap;
	struct __ns1__AcceptResponse_ soap_tmp___ns1__AcceptResponse_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/bossn/ws/bossn.1cws";
	if (soap_action == NULL)
		soap_action = "http://localhost/bossn#bossn:AcceptResponse";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AcceptResponse_.ns1__AcceptResponse = ns1__AcceptResponse;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__AcceptResponse_(soap, &soap_tmp___ns1__AcceptResponse_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AcceptResponse_(soap, &soap_tmp___ns1__AcceptResponse_, "-ns1:AcceptResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AcceptResponse_(soap, &soap_tmp___ns1__AcceptResponse_, "-ns1:AcceptResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int bossnSoapBindingProxy::recv_AcceptResponse_(struct __ns1__AcceptResponse_& tmp)
{	struct soap *soap = this->soap;

	struct __ns1__AcceptResponse_ *_param_7 = &tmp;
	soap_default___ns1__AcceptResponse_(soap, _param_7);
	soap_begin(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ns1__AcceptResponse_(soap, _param_7, "-ns1:AcceptResponse", NULL);
	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
		soap->error = SOAP_NO_METHOD;
	if (soap->error
	 || soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int bossnSoapBindingProxy::Accept_(const char *endpoint, const char *soap_action, _ns1__Accept *ns1__Accept, _ns1__AcceptResponse *ns1__AcceptResponse)
{	struct soap *soap = this->soap;
	struct __ns1__Accept_ soap_tmp___ns1__Accept_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/bossn/ws/bossn.1cws";
	if (soap_action == NULL)
		soap_action = "http://localhost/bossn#bossn:Accept";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__Accept_.ns1__Accept = ns1__Accept;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__Accept_(soap, &soap_tmp___ns1__Accept_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__Accept_(soap, &soap_tmp___ns1__Accept_, "-ns1:Accept", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__Accept_(soap, &soap_tmp___ns1__Accept_, "-ns1:Accept", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__AcceptResponse)
		return soap_closesock(soap);
	ns1__AcceptResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AcceptResponse->soap_get(soap, "ns1:AcceptResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int bossnSoapBindingProxy::send_DisappearedResponse_(const char *endpoint, const char *soap_action, _ns1__DisappearedResponse *ns1__DisappearedResponse)
{	struct soap *soap = this->soap;
	struct __ns1__DisappearedResponse_ soap_tmp___ns1__DisappearedResponse_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/bossn/ws/bossn.1cws";
	if (soap_action == NULL)
		soap_action = "http://localhost/bossn#bossn:DisappearedResponse";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__DisappearedResponse_.ns1__DisappearedResponse = ns1__DisappearedResponse;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__DisappearedResponse_(soap, &soap_tmp___ns1__DisappearedResponse_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DisappearedResponse_(soap, &soap_tmp___ns1__DisappearedResponse_, "-ns1:DisappearedResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DisappearedResponse_(soap, &soap_tmp___ns1__DisappearedResponse_, "-ns1:DisappearedResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int bossnSoapBindingProxy::recv_DisappearedResponse_(struct __ns1__DisappearedResponse_& tmp)
{	struct soap *soap = this->soap;

	struct __ns1__DisappearedResponse_ *_param_8 = &tmp;
	soap_default___ns1__DisappearedResponse_(soap, _param_8);
	soap_begin(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ns1__DisappearedResponse_(soap, _param_8, "-ns1:DisappearedResponse", NULL);
	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
		soap->error = SOAP_NO_METHOD;
	if (soap->error
	 || soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int bossnSoapBindingProxy::Disappeared_(const char *endpoint, const char *soap_action, _ns1__Disappeared *ns1__Disappeared, _ns1__DisappearedResponse *ns1__DisappearedResponse)
{	struct soap *soap = this->soap;
	struct __ns1__Disappeared_ soap_tmp___ns1__Disappeared_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/bossn/ws/bossn.1cws";
	if (soap_action == NULL)
		soap_action = "http://localhost/bossn#bossn:Disappeared";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__Disappeared_.ns1__Disappeared = ns1__Disappeared;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__Disappeared_(soap, &soap_tmp___ns1__Disappeared_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__Disappeared_(soap, &soap_tmp___ns1__Disappeared_, "-ns1:Disappeared", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__Disappeared_(soap, &soap_tmp___ns1__Disappeared_, "-ns1:Disappeared", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__DisappearedResponse)
		return soap_closesock(soap);
	ns1__DisappearedResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DisappearedResponse->soap_get(soap, "ns1:DisappearedResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
