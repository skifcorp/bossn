/* soapH.h
   Generated by gSOAP 2.8.14 from webservice.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under ONE of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 soap_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_begin(soap), soap_serialize_byte(soap, data), soap_begin_send(soap) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_begin(soap), soap_serialize_int(soap, data), soap_begin_send(soap) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_bool
#define SOAP_TYPE_bool (18)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_bool(struct soap*, bool *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_bool(struct soap*, const char*, int, const bool *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_bool2s(struct soap*, bool);
SOAP_FMAC3 bool * SOAP_FMAC4 soap_in_bool(struct soap*, const char*, bool *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2bool(struct soap*, const char*, bool *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_bool(struct soap*, const bool *, const char*, const char*);

#ifndef soap_write_bool
#define soap_write_bool(soap, data) ( soap_begin(soap), soap_serialize_bool(soap, data), soap_begin_send(soap) || soap_put_bool(soap, data, "boolean", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 bool * SOAP_FMAC4 soap_get_bool(struct soap*, bool *, const char*, const char*);

#ifndef soap_read_bool
#define soap_read_bool(soap, data) ( soap_begin_recv(soap) || !soap_get_bool(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (16)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_std__string
#define soap_write_std__string(soap, data) ( soap_begin(soap), soap_serialize_std__string(soap, data), soap_begin_send(soap) || soap_put_std__string(soap, data, "string", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_std__string
#define soap_read_std__string(soap, data) ( soap_begin_recv(soap) || !soap_get_std__string(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);

inline std::string * soap_new_std__string(struct soap *soap, int n = -1) { return soap_instantiate_std__string(soap, n, NULL, NULL, NULL); }

inline std::string * soap_new_req_std__string(struct soap *soap) { std::string *_p = soap_instantiate_std__string(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_std__string(soap, _p); } return _p; }

inline std::string * soap_new_set_std__string(struct soap *soap) { std::string *_p = soap_instantiate_std__string(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_std__string(soap, _p); } return _p; }

inline void soap_delete_std__string(struct soap *soap, std::string *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__DisappearedResponse
#define SOAP_TYPE__ns1__DisappearedResponse (15)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__DisappearedResponse(struct soap*, const char*, int, const _ns1__DisappearedResponse *, const char*);
SOAP_FMAC3 _ns1__DisappearedResponse * SOAP_FMAC4 soap_in__ns1__DisappearedResponse(struct soap*, const char*, _ns1__DisappearedResponse *, const char*);

#ifndef soap_write__ns1__DisappearedResponse
#define soap_write__ns1__DisappearedResponse(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:DisappearedResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__DisappearedResponse * SOAP_FMAC4 soap_get__ns1__DisappearedResponse(struct soap*, _ns1__DisappearedResponse *, const char*, const char*);

#ifndef soap_read__ns1__DisappearedResponse
#define soap_read__ns1__DisappearedResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__DisappearedResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1__DisappearedResponse * SOAP_FMAC2 soap_instantiate__ns1__DisappearedResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__DisappearedResponse * soap_new__ns1__DisappearedResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__DisappearedResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__DisappearedResponse * soap_new_req__ns1__DisappearedResponse(struct soap *soap, bool return_) { _ns1__DisappearedResponse *_p = soap_instantiate__ns1__DisappearedResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__DisappearedResponse::return_ = return_; } return _p; }

inline _ns1__DisappearedResponse * soap_new_set__ns1__DisappearedResponse(struct soap *soap, bool return_) { _ns1__DisappearedResponse *_p = soap_instantiate__ns1__DisappearedResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__DisappearedResponse::return_ = return_; } return _p; }

inline void soap_delete__ns1__DisappearedResponse(struct soap *soap, _ns1__DisappearedResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__DisappearedResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__Disappeared
#define SOAP_TYPE__ns1__Disappeared (14)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__Disappeared(struct soap*, const char*, int, const _ns1__Disappeared *, const char*);
SOAP_FMAC3 _ns1__Disappeared * SOAP_FMAC4 soap_in__ns1__Disappeared(struct soap*, const char*, _ns1__Disappeared *, const char*);

#ifndef soap_write__ns1__Disappeared
#define soap_write__ns1__Disappeared(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:Disappeared", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__Disappeared * SOAP_FMAC4 soap_get__ns1__Disappeared(struct soap*, _ns1__Disappeared *, const char*, const char*);

#ifndef soap_read__ns1__Disappeared
#define soap_read__ns1__Disappeared(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__Disappeared(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1__Disappeared * SOAP_FMAC2 soap_instantiate__ns1__Disappeared(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__Disappeared * soap_new__ns1__Disappeared(struct soap *soap, int n = -1) { return soap_instantiate__ns1__Disappeared(soap, n, NULL, NULL, NULL); }

inline _ns1__Disappeared * soap_new_req__ns1__Disappeared(struct soap *soap, std::string& platformId) { _ns1__Disappeared *_p = soap_instantiate__ns1__Disappeared(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__Disappeared::platformId = platformId; } return _p; }

inline _ns1__Disappeared * soap_new_set__ns1__Disappeared(struct soap *soap, std::string& platformId) { _ns1__Disappeared *_p = soap_instantiate__ns1__Disappeared(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__Disappeared::platformId = platformId; } return _p; }

inline void soap_delete__ns1__Disappeared(struct soap *soap, _ns1__Disappeared *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__Disappeared(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__AcceptResponse
#define SOAP_TYPE__ns1__AcceptResponse (13)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__AcceptResponse(struct soap*, const char*, int, const _ns1__AcceptResponse *, const char*);
SOAP_FMAC3 _ns1__AcceptResponse * SOAP_FMAC4 soap_in__ns1__AcceptResponse(struct soap*, const char*, _ns1__AcceptResponse *, const char*);

#ifndef soap_write__ns1__AcceptResponse
#define soap_write__ns1__AcceptResponse(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:AcceptResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__AcceptResponse * SOAP_FMAC4 soap_get__ns1__AcceptResponse(struct soap*, _ns1__AcceptResponse *, const char*, const char*);

#ifndef soap_read__ns1__AcceptResponse
#define soap_read__ns1__AcceptResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__AcceptResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1__AcceptResponse * SOAP_FMAC2 soap_instantiate__ns1__AcceptResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__AcceptResponse * soap_new__ns1__AcceptResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__AcceptResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__AcceptResponse * soap_new_req__ns1__AcceptResponse(struct soap *soap, std::string& return_) { _ns1__AcceptResponse *_p = soap_instantiate__ns1__AcceptResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__AcceptResponse::return_ = return_; } return _p; }

inline _ns1__AcceptResponse * soap_new_set__ns1__AcceptResponse(struct soap *soap, std::string& return_) { _ns1__AcceptResponse *_p = soap_instantiate__ns1__AcceptResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__AcceptResponse::return_ = return_; } return _p; }

inline void soap_delete__ns1__AcceptResponse(struct soap *soap, _ns1__AcceptResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__AcceptResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__Accept
#define SOAP_TYPE__ns1__Accept (12)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__Accept(struct soap*, const char*, int, const _ns1__Accept *, const char*);
SOAP_FMAC3 _ns1__Accept * SOAP_FMAC4 soap_in__ns1__Accept(struct soap*, const char*, _ns1__Accept *, const char*);

#ifndef soap_write__ns1__Accept
#define soap_write__ns1__Accept(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:Accept", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__Accept * SOAP_FMAC4 soap_get__ns1__Accept(struct soap*, _ns1__Accept *, const char*, const char*);

#ifndef soap_read__ns1__Accept
#define soap_read__ns1__Accept(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__Accept(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1__Accept * SOAP_FMAC2 soap_instantiate__ns1__Accept(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__Accept * soap_new__ns1__Accept(struct soap *soap, int n = -1) { return soap_instantiate__ns1__Accept(soap, n, NULL, NULL, NULL); }

inline _ns1__Accept * soap_new_req__ns1__Accept(struct soap *soap, bool flag, std::string& platformId) { _ns1__Accept *_p = soap_instantiate__ns1__Accept(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__Accept::flag = flag; _p->_ns1__Accept::platformId = platformId; } return _p; }

inline _ns1__Accept * soap_new_set__ns1__Accept(struct soap *soap, bool flag, std::string& platformId) { _ns1__Accept *_p = soap_instantiate__ns1__Accept(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__Accept::flag = flag; _p->_ns1__Accept::platformId = platformId; } return _p; }

inline void soap_delete__ns1__Accept(struct soap *soap, _ns1__Accept *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__Accept(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__ExchangeResponse
#define SOAP_TYPE__ns1__ExchangeResponse (11)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__ExchangeResponse(struct soap*, const char*, int, const _ns1__ExchangeResponse *, const char*);
SOAP_FMAC3 _ns1__ExchangeResponse * SOAP_FMAC4 soap_in__ns1__ExchangeResponse(struct soap*, const char*, _ns1__ExchangeResponse *, const char*);

#ifndef soap_write__ns1__ExchangeResponse
#define soap_write__ns1__ExchangeResponse(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:ExchangeResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__ExchangeResponse * SOAP_FMAC4 soap_get__ns1__ExchangeResponse(struct soap*, _ns1__ExchangeResponse *, const char*, const char*);

#ifndef soap_read__ns1__ExchangeResponse
#define soap_read__ns1__ExchangeResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__ExchangeResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1__ExchangeResponse * SOAP_FMAC2 soap_instantiate__ns1__ExchangeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__ExchangeResponse * soap_new__ns1__ExchangeResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__ExchangeResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__ExchangeResponse * soap_new_req__ns1__ExchangeResponse(struct soap *soap, std::string& return_) { _ns1__ExchangeResponse *_p = soap_instantiate__ns1__ExchangeResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__ExchangeResponse::return_ = return_; } return _p; }

inline _ns1__ExchangeResponse * soap_new_set__ns1__ExchangeResponse(struct soap *soap, std::string& return_) { _ns1__ExchangeResponse *_p = soap_instantiate__ns1__ExchangeResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__ExchangeResponse::return_ = return_; } return _p; }

inline void soap_delete__ns1__ExchangeResponse(struct soap *soap, _ns1__ExchangeResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__ExchangeResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__Exchange
#define SOAP_TYPE__ns1__Exchange (10)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__Exchange(struct soap*, const char*, int, const _ns1__Exchange *, const char*);
SOAP_FMAC3 _ns1__Exchange * SOAP_FMAC4 soap_in__ns1__Exchange(struct soap*, const char*, _ns1__Exchange *, const char*);

#ifndef soap_write__ns1__Exchange
#define soap_write__ns1__Exchange(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:Exchange", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__Exchange * SOAP_FMAC4 soap_get__ns1__Exchange(struct soap*, _ns1__Exchange *, const char*, const char*);

#ifndef soap_read__ns1__Exchange
#define soap_read__ns1__Exchange(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__Exchange(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1__Exchange * SOAP_FMAC2 soap_instantiate__ns1__Exchange(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__Exchange * soap_new__ns1__Exchange(struct soap *soap, int n = -1) { return soap_instantiate__ns1__Exchange(soap, n, NULL, NULL, NULL); }

inline _ns1__Exchange * soap_new_req__ns1__Exchange(struct soap *soap, std::string& param, std::string& platformId, std::string& RFID_USCOREUID) { _ns1__Exchange *_p = soap_instantiate__ns1__Exchange(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__Exchange::param = param; _p->_ns1__Exchange::platformId = platformId; _p->_ns1__Exchange::RFID_USCOREUID = RFID_USCOREUID; } return _p; }

inline _ns1__Exchange * soap_new_set__ns1__Exchange(struct soap *soap, std::string& param, std::string& platformId, std::string& RFID_USCOREUID) { _ns1__Exchange *_p = soap_instantiate__ns1__Exchange(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__Exchange::param = param; _p->_ns1__Exchange::platformId = platformId; _p->_ns1__Exchange::RFID_USCOREUID = RFID_USCOREUID; } return _p; }

inline void soap_delete__ns1__Exchange(struct soap *soap, _ns1__Exchange *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__Exchange(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__AppearedResponse
#define SOAP_TYPE__ns1__AppearedResponse (9)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__AppearedResponse(struct soap*, const char*, int, const _ns1__AppearedResponse *, const char*);
SOAP_FMAC3 _ns1__AppearedResponse * SOAP_FMAC4 soap_in__ns1__AppearedResponse(struct soap*, const char*, _ns1__AppearedResponse *, const char*);

#ifndef soap_write__ns1__AppearedResponse
#define soap_write__ns1__AppearedResponse(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:AppearedResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__AppearedResponse * SOAP_FMAC4 soap_get__ns1__AppearedResponse(struct soap*, _ns1__AppearedResponse *, const char*, const char*);

#ifndef soap_read__ns1__AppearedResponse
#define soap_read__ns1__AppearedResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__AppearedResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1__AppearedResponse * SOAP_FMAC2 soap_instantiate__ns1__AppearedResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__AppearedResponse * soap_new__ns1__AppearedResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__AppearedResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__AppearedResponse * soap_new_req__ns1__AppearedResponse(struct soap *soap, bool return_) { _ns1__AppearedResponse *_p = soap_instantiate__ns1__AppearedResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__AppearedResponse::return_ = return_; } return _p; }

inline _ns1__AppearedResponse * soap_new_set__ns1__AppearedResponse(struct soap *soap, bool return_) { _ns1__AppearedResponse *_p = soap_instantiate__ns1__AppearedResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__AppearedResponse::return_ = return_; } return _p; }

inline void soap_delete__ns1__AppearedResponse(struct soap *soap, _ns1__AppearedResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__AppearedResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__Appeared
#define SOAP_TYPE__ns1__Appeared (8)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__Appeared(struct soap*, const char*, int, const _ns1__Appeared *, const char*);
SOAP_FMAC3 _ns1__Appeared * SOAP_FMAC4 soap_in__ns1__Appeared(struct soap*, const char*, _ns1__Appeared *, const char*);

#ifndef soap_write__ns1__Appeared
#define soap_write__ns1__Appeared(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:Appeared", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__Appeared * SOAP_FMAC4 soap_get__ns1__Appeared(struct soap*, _ns1__Appeared *, const char*, const char*);

#ifndef soap_read__ns1__Appeared
#define soap_read__ns1__Appeared(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__Appeared(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1__Appeared * SOAP_FMAC2 soap_instantiate__ns1__Appeared(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__Appeared * soap_new__ns1__Appeared(struct soap *soap, int n = -1) { return soap_instantiate__ns1__Appeared(soap, n, NULL, NULL, NULL); }

inline _ns1__Appeared * soap_new_req__ns1__Appeared(struct soap *soap, std::string& platformId) { _ns1__Appeared *_p = soap_instantiate__ns1__Appeared(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__Appeared::platformId = platformId; } return _p; }

inline _ns1__Appeared * soap_new_set__ns1__Appeared(struct soap *soap, std::string& platformId) { _ns1__Appeared *_p = soap_instantiate__ns1__Appeared(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__Appeared::platformId = platformId; } return _p; }

inline void soap_delete__ns1__Appeared(struct soap *soap, _ns1__Appeared *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__Appeared(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (66)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Fault(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(struct soap *soap) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); } return _p; }

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(struct soap *soap, char *faultcode, char *faultstring, char *faultactor, struct SOAP_ENV__Detail *detail, struct SOAP_ENV__Code *SOAP_ENV__Code, struct SOAP_ENV__Reason *SOAP_ENV__Reason, char *SOAP_ENV__Node, char *SOAP_ENV__Role, struct SOAP_ENV__Detail *SOAP_ENV__Detail) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); _p->faultcode = faultcode; _p->faultstring = faultstring; _p->faultactor = faultactor; _p->detail = detail; _p->SOAP_ENV__Code = SOAP_ENV__Code; _p->SOAP_ENV__Reason = SOAP_ENV__Reason; _p->SOAP_ENV__Node = SOAP_ENV__Node; _p->SOAP_ENV__Role = SOAP_ENV__Role; _p->SOAP_ENV__Detail = SOAP_ENV__Detail; } return _p; }

inline void soap_delete_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (65)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Reason(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(struct soap *soap) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); } return _p; }

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(struct soap *soap, char *SOAP_ENV__Text) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); _p->SOAP_ENV__Text = SOAP_ENV__Text; } return _p; }

inline void soap_delete_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (63)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Detail(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(struct soap *soap, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__type = __type; _p->fault = fault; } return _p; }

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(struct soap *soap, char *__any, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__any = __any; _p->__type = __type; _p->fault = fault; } return _p; }

inline void soap_delete_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (61)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Code(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(struct soap *soap) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); } return _p; }

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(struct soap *soap, char *SOAP_ENV__Value, struct SOAP_ENV__Code *SOAP_ENV__Subcode) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); _p->SOAP_ENV__Value = SOAP_ENV__Value; _p->SOAP_ENV__Subcode = SOAP_ENV__Subcode; } return _p; }

inline void soap_delete_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (60)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Header(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline void soap_delete_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE___ns1__Disappeared_
#define SOAP_TYPE___ns1__Disappeared_ (59)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__Disappeared_(struct soap*, struct __ns1__Disappeared_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__Disappeared_(struct soap*, const struct __ns1__Disappeared_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__Disappeared_(struct soap*, const char*, int, const struct __ns1__Disappeared_ *, const char*);
SOAP_FMAC3 struct __ns1__Disappeared_ * SOAP_FMAC4 soap_in___ns1__Disappeared_(struct soap*, const char*, struct __ns1__Disappeared_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__Disappeared_(struct soap*, const struct __ns1__Disappeared_ *, const char*, const char*);

#ifndef soap_write___ns1__Disappeared_
#define soap_write___ns1__Disappeared_(soap, data) ( soap_begin(soap), soap_serialize___ns1__Disappeared_(soap, data), soap_begin_send(soap) || soap_put___ns1__Disappeared_(soap, data, "-ns1:Disappeared", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1__Disappeared_ * SOAP_FMAC4 soap_get___ns1__Disappeared_(struct soap*, struct __ns1__Disappeared_ *, const char*, const char*);

#ifndef soap_read___ns1__Disappeared_
#define soap_read___ns1__Disappeared_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__Disappeared_(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1__Disappeared_ * SOAP_FMAC2 soap_instantiate___ns1__Disappeared_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__Disappeared_ * soap_new___ns1__Disappeared_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__Disappeared_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__Disappeared_ * soap_new_req___ns1__Disappeared_(struct soap *soap) { struct __ns1__Disappeared_ *_p = soap_instantiate___ns1__Disappeared_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Disappeared_(soap, _p); } return _p; }

inline struct __ns1__Disappeared_ * soap_new_set___ns1__Disappeared_(struct soap *soap, _ns1__Disappeared *ns1__Disappeared) { struct __ns1__Disappeared_ *_p = soap_instantiate___ns1__Disappeared_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Disappeared_(soap, _p); _p->ns1__Disappeared = ns1__Disappeared; } return _p; }

inline void soap_delete___ns1__Disappeared_(struct soap *soap, struct __ns1__Disappeared_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__Disappeared_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__DisappearedResponse_
#define SOAP_TYPE___ns1__DisappearedResponse_ (57)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__DisappearedResponse_(struct soap*, struct __ns1__DisappearedResponse_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__DisappearedResponse_(struct soap*, const struct __ns1__DisappearedResponse_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__DisappearedResponse_(struct soap*, const char*, int, const struct __ns1__DisappearedResponse_ *, const char*);
SOAP_FMAC3 struct __ns1__DisappearedResponse_ * SOAP_FMAC4 soap_in___ns1__DisappearedResponse_(struct soap*, const char*, struct __ns1__DisappearedResponse_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__DisappearedResponse_(struct soap*, const struct __ns1__DisappearedResponse_ *, const char*, const char*);

#ifndef soap_write___ns1__DisappearedResponse_
#define soap_write___ns1__DisappearedResponse_(soap, data) ( soap_begin(soap), soap_serialize___ns1__DisappearedResponse_(soap, data), soap_begin_send(soap) || soap_put___ns1__DisappearedResponse_(soap, data, "-ns1:DisappearedResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1__DisappearedResponse_ * SOAP_FMAC4 soap_get___ns1__DisappearedResponse_(struct soap*, struct __ns1__DisappearedResponse_ *, const char*, const char*);

#ifndef soap_read___ns1__DisappearedResponse_
#define soap_read___ns1__DisappearedResponse_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__DisappearedResponse_(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1__DisappearedResponse_ * SOAP_FMAC2 soap_instantiate___ns1__DisappearedResponse_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__DisappearedResponse_ * soap_new___ns1__DisappearedResponse_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__DisappearedResponse_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__DisappearedResponse_ * soap_new_req___ns1__DisappearedResponse_(struct soap *soap) { struct __ns1__DisappearedResponse_ *_p = soap_instantiate___ns1__DisappearedResponse_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__DisappearedResponse_(soap, _p); } return _p; }

inline struct __ns1__DisappearedResponse_ * soap_new_set___ns1__DisappearedResponse_(struct soap *soap, _ns1__DisappearedResponse *ns1__DisappearedResponse) { struct __ns1__DisappearedResponse_ *_p = soap_instantiate___ns1__DisappearedResponse_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__DisappearedResponse_(soap, _p); _p->ns1__DisappearedResponse = ns1__DisappearedResponse; } return _p; }

inline void soap_delete___ns1__DisappearedResponse_(struct soap *soap, struct __ns1__DisappearedResponse_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__DisappearedResponse_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__Accept_
#define SOAP_TYPE___ns1__Accept_ (55)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__Accept_(struct soap*, struct __ns1__Accept_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__Accept_(struct soap*, const struct __ns1__Accept_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__Accept_(struct soap*, const char*, int, const struct __ns1__Accept_ *, const char*);
SOAP_FMAC3 struct __ns1__Accept_ * SOAP_FMAC4 soap_in___ns1__Accept_(struct soap*, const char*, struct __ns1__Accept_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__Accept_(struct soap*, const struct __ns1__Accept_ *, const char*, const char*);

#ifndef soap_write___ns1__Accept_
#define soap_write___ns1__Accept_(soap, data) ( soap_begin(soap), soap_serialize___ns1__Accept_(soap, data), soap_begin_send(soap) || soap_put___ns1__Accept_(soap, data, "-ns1:Accept", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1__Accept_ * SOAP_FMAC4 soap_get___ns1__Accept_(struct soap*, struct __ns1__Accept_ *, const char*, const char*);

#ifndef soap_read___ns1__Accept_
#define soap_read___ns1__Accept_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__Accept_(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1__Accept_ * SOAP_FMAC2 soap_instantiate___ns1__Accept_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__Accept_ * soap_new___ns1__Accept_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__Accept_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__Accept_ * soap_new_req___ns1__Accept_(struct soap *soap) { struct __ns1__Accept_ *_p = soap_instantiate___ns1__Accept_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Accept_(soap, _p); } return _p; }

inline struct __ns1__Accept_ * soap_new_set___ns1__Accept_(struct soap *soap, _ns1__Accept *ns1__Accept) { struct __ns1__Accept_ *_p = soap_instantiate___ns1__Accept_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Accept_(soap, _p); _p->ns1__Accept = ns1__Accept; } return _p; }

inline void soap_delete___ns1__Accept_(struct soap *soap, struct __ns1__Accept_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__Accept_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__AcceptResponse_
#define SOAP_TYPE___ns1__AcceptResponse_ (53)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__AcceptResponse_(struct soap*, struct __ns1__AcceptResponse_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__AcceptResponse_(struct soap*, const struct __ns1__AcceptResponse_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__AcceptResponse_(struct soap*, const char*, int, const struct __ns1__AcceptResponse_ *, const char*);
SOAP_FMAC3 struct __ns1__AcceptResponse_ * SOAP_FMAC4 soap_in___ns1__AcceptResponse_(struct soap*, const char*, struct __ns1__AcceptResponse_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__AcceptResponse_(struct soap*, const struct __ns1__AcceptResponse_ *, const char*, const char*);

#ifndef soap_write___ns1__AcceptResponse_
#define soap_write___ns1__AcceptResponse_(soap, data) ( soap_begin(soap), soap_serialize___ns1__AcceptResponse_(soap, data), soap_begin_send(soap) || soap_put___ns1__AcceptResponse_(soap, data, "-ns1:AcceptResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1__AcceptResponse_ * SOAP_FMAC4 soap_get___ns1__AcceptResponse_(struct soap*, struct __ns1__AcceptResponse_ *, const char*, const char*);

#ifndef soap_read___ns1__AcceptResponse_
#define soap_read___ns1__AcceptResponse_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__AcceptResponse_(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1__AcceptResponse_ * SOAP_FMAC2 soap_instantiate___ns1__AcceptResponse_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__AcceptResponse_ * soap_new___ns1__AcceptResponse_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__AcceptResponse_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__AcceptResponse_ * soap_new_req___ns1__AcceptResponse_(struct soap *soap) { struct __ns1__AcceptResponse_ *_p = soap_instantiate___ns1__AcceptResponse_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__AcceptResponse_(soap, _p); } return _p; }

inline struct __ns1__AcceptResponse_ * soap_new_set___ns1__AcceptResponse_(struct soap *soap, _ns1__AcceptResponse *ns1__AcceptResponse) { struct __ns1__AcceptResponse_ *_p = soap_instantiate___ns1__AcceptResponse_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__AcceptResponse_(soap, _p); _p->ns1__AcceptResponse = ns1__AcceptResponse; } return _p; }

inline void soap_delete___ns1__AcceptResponse_(struct soap *soap, struct __ns1__AcceptResponse_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__AcceptResponse_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__Exchange_
#define SOAP_TYPE___ns1__Exchange_ (51)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__Exchange_(struct soap*, struct __ns1__Exchange_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__Exchange_(struct soap*, const struct __ns1__Exchange_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__Exchange_(struct soap*, const char*, int, const struct __ns1__Exchange_ *, const char*);
SOAP_FMAC3 struct __ns1__Exchange_ * SOAP_FMAC4 soap_in___ns1__Exchange_(struct soap*, const char*, struct __ns1__Exchange_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__Exchange_(struct soap*, const struct __ns1__Exchange_ *, const char*, const char*);

#ifndef soap_write___ns1__Exchange_
#define soap_write___ns1__Exchange_(soap, data) ( soap_begin(soap), soap_serialize___ns1__Exchange_(soap, data), soap_begin_send(soap) || soap_put___ns1__Exchange_(soap, data, "-ns1:Exchange", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1__Exchange_ * SOAP_FMAC4 soap_get___ns1__Exchange_(struct soap*, struct __ns1__Exchange_ *, const char*, const char*);

#ifndef soap_read___ns1__Exchange_
#define soap_read___ns1__Exchange_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__Exchange_(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1__Exchange_ * SOAP_FMAC2 soap_instantiate___ns1__Exchange_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__Exchange_ * soap_new___ns1__Exchange_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__Exchange_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__Exchange_ * soap_new_req___ns1__Exchange_(struct soap *soap) { struct __ns1__Exchange_ *_p = soap_instantiate___ns1__Exchange_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Exchange_(soap, _p); } return _p; }

inline struct __ns1__Exchange_ * soap_new_set___ns1__Exchange_(struct soap *soap, _ns1__Exchange *ns1__Exchange) { struct __ns1__Exchange_ *_p = soap_instantiate___ns1__Exchange_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Exchange_(soap, _p); _p->ns1__Exchange = ns1__Exchange; } return _p; }

inline void soap_delete___ns1__Exchange_(struct soap *soap, struct __ns1__Exchange_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__Exchange_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__ExchangeResponse_
#define SOAP_TYPE___ns1__ExchangeResponse_ (49)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__ExchangeResponse_(struct soap*, struct __ns1__ExchangeResponse_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__ExchangeResponse_(struct soap*, const struct __ns1__ExchangeResponse_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__ExchangeResponse_(struct soap*, const char*, int, const struct __ns1__ExchangeResponse_ *, const char*);
SOAP_FMAC3 struct __ns1__ExchangeResponse_ * SOAP_FMAC4 soap_in___ns1__ExchangeResponse_(struct soap*, const char*, struct __ns1__ExchangeResponse_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__ExchangeResponse_(struct soap*, const struct __ns1__ExchangeResponse_ *, const char*, const char*);

#ifndef soap_write___ns1__ExchangeResponse_
#define soap_write___ns1__ExchangeResponse_(soap, data) ( soap_begin(soap), soap_serialize___ns1__ExchangeResponse_(soap, data), soap_begin_send(soap) || soap_put___ns1__ExchangeResponse_(soap, data, "-ns1:ExchangeResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1__ExchangeResponse_ * SOAP_FMAC4 soap_get___ns1__ExchangeResponse_(struct soap*, struct __ns1__ExchangeResponse_ *, const char*, const char*);

#ifndef soap_read___ns1__ExchangeResponse_
#define soap_read___ns1__ExchangeResponse_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__ExchangeResponse_(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1__ExchangeResponse_ * SOAP_FMAC2 soap_instantiate___ns1__ExchangeResponse_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__ExchangeResponse_ * soap_new___ns1__ExchangeResponse_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__ExchangeResponse_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__ExchangeResponse_ * soap_new_req___ns1__ExchangeResponse_(struct soap *soap) { struct __ns1__ExchangeResponse_ *_p = soap_instantiate___ns1__ExchangeResponse_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__ExchangeResponse_(soap, _p); } return _p; }

inline struct __ns1__ExchangeResponse_ * soap_new_set___ns1__ExchangeResponse_(struct soap *soap, _ns1__ExchangeResponse *ns1__ExchangeResponse) { struct __ns1__ExchangeResponse_ *_p = soap_instantiate___ns1__ExchangeResponse_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__ExchangeResponse_(soap, _p); _p->ns1__ExchangeResponse = ns1__ExchangeResponse; } return _p; }

inline void soap_delete___ns1__ExchangeResponse_(struct soap *soap, struct __ns1__ExchangeResponse_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__ExchangeResponse_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__Appeared_
#define SOAP_TYPE___ns1__Appeared_ (47)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__Appeared_(struct soap*, struct __ns1__Appeared_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__Appeared_(struct soap*, const struct __ns1__Appeared_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__Appeared_(struct soap*, const char*, int, const struct __ns1__Appeared_ *, const char*);
SOAP_FMAC3 struct __ns1__Appeared_ * SOAP_FMAC4 soap_in___ns1__Appeared_(struct soap*, const char*, struct __ns1__Appeared_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__Appeared_(struct soap*, const struct __ns1__Appeared_ *, const char*, const char*);

#ifndef soap_write___ns1__Appeared_
#define soap_write___ns1__Appeared_(soap, data) ( soap_begin(soap), soap_serialize___ns1__Appeared_(soap, data), soap_begin_send(soap) || soap_put___ns1__Appeared_(soap, data, "-ns1:Appeared", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1__Appeared_ * SOAP_FMAC4 soap_get___ns1__Appeared_(struct soap*, struct __ns1__Appeared_ *, const char*, const char*);

#ifndef soap_read___ns1__Appeared_
#define soap_read___ns1__Appeared_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__Appeared_(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1__Appeared_ * SOAP_FMAC2 soap_instantiate___ns1__Appeared_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__Appeared_ * soap_new___ns1__Appeared_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__Appeared_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__Appeared_ * soap_new_req___ns1__Appeared_(struct soap *soap) { struct __ns1__Appeared_ *_p = soap_instantiate___ns1__Appeared_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Appeared_(soap, _p); } return _p; }

inline struct __ns1__Appeared_ * soap_new_set___ns1__Appeared_(struct soap *soap, _ns1__Appeared *ns1__Appeared) { struct __ns1__Appeared_ *_p = soap_instantiate___ns1__Appeared_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Appeared_(soap, _p); _p->ns1__Appeared = ns1__Appeared; } return _p; }

inline void soap_delete___ns1__Appeared_(struct soap *soap, struct __ns1__Appeared_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__Appeared_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__AppearedResponse_
#define SOAP_TYPE___ns1__AppearedResponse_ (45)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__AppearedResponse_(struct soap*, struct __ns1__AppearedResponse_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__AppearedResponse_(struct soap*, const struct __ns1__AppearedResponse_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__AppearedResponse_(struct soap*, const char*, int, const struct __ns1__AppearedResponse_ *, const char*);
SOAP_FMAC3 struct __ns1__AppearedResponse_ * SOAP_FMAC4 soap_in___ns1__AppearedResponse_(struct soap*, const char*, struct __ns1__AppearedResponse_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__AppearedResponse_(struct soap*, const struct __ns1__AppearedResponse_ *, const char*, const char*);

#ifndef soap_write___ns1__AppearedResponse_
#define soap_write___ns1__AppearedResponse_(soap, data) ( soap_begin(soap), soap_serialize___ns1__AppearedResponse_(soap, data), soap_begin_send(soap) || soap_put___ns1__AppearedResponse_(soap, data, "-ns1:AppearedResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1__AppearedResponse_ * SOAP_FMAC4 soap_get___ns1__AppearedResponse_(struct soap*, struct __ns1__AppearedResponse_ *, const char*, const char*);

#ifndef soap_read___ns1__AppearedResponse_
#define soap_read___ns1__AppearedResponse_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__AppearedResponse_(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1__AppearedResponse_ * SOAP_FMAC2 soap_instantiate___ns1__AppearedResponse_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__AppearedResponse_ * soap_new___ns1__AppearedResponse_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__AppearedResponse_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__AppearedResponse_ * soap_new_req___ns1__AppearedResponse_(struct soap *soap) { struct __ns1__AppearedResponse_ *_p = soap_instantiate___ns1__AppearedResponse_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__AppearedResponse_(soap, _p); } return _p; }

inline struct __ns1__AppearedResponse_ * soap_new_set___ns1__AppearedResponse_(struct soap *soap, _ns1__AppearedResponse *ns1__AppearedResponse) { struct __ns1__AppearedResponse_ *_p = soap_instantiate___ns1__AppearedResponse_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__AppearedResponse_(soap, _p); _p->ns1__AppearedResponse = ns1__AppearedResponse; } return _p; }

inline void soap_delete___ns1__AppearedResponse_(struct soap *soap, struct __ns1__AppearedResponse_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__AppearedResponse_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__Disappeared
#define SOAP_TYPE___ns1__Disappeared (43)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__Disappeared(struct soap*, struct __ns1__Disappeared *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__Disappeared(struct soap*, const struct __ns1__Disappeared *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__Disappeared(struct soap*, const char*, int, const struct __ns1__Disappeared *, const char*);
SOAP_FMAC3 struct __ns1__Disappeared * SOAP_FMAC4 soap_in___ns1__Disappeared(struct soap*, const char*, struct __ns1__Disappeared *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__Disappeared(struct soap*, const struct __ns1__Disappeared *, const char*, const char*);

#ifndef soap_write___ns1__Disappeared
#define soap_write___ns1__Disappeared(soap, data) ( soap_begin(soap), soap_serialize___ns1__Disappeared(soap, data), soap_begin_send(soap) || soap_put___ns1__Disappeared(soap, data, "-ns1:Disappeared", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1__Disappeared * SOAP_FMAC4 soap_get___ns1__Disappeared(struct soap*, struct __ns1__Disappeared *, const char*, const char*);

#ifndef soap_read___ns1__Disappeared
#define soap_read___ns1__Disappeared(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__Disappeared(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1__Disappeared * SOAP_FMAC2 soap_instantiate___ns1__Disappeared(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__Disappeared * soap_new___ns1__Disappeared(struct soap *soap, int n = -1) { return soap_instantiate___ns1__Disappeared(soap, n, NULL, NULL, NULL); }

inline struct __ns1__Disappeared * soap_new_req___ns1__Disappeared(struct soap *soap) { struct __ns1__Disappeared *_p = soap_instantiate___ns1__Disappeared(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Disappeared(soap, _p); } return _p; }

inline struct __ns1__Disappeared * soap_new_set___ns1__Disappeared(struct soap *soap, _ns1__Disappeared *ns1__Disappeared) { struct __ns1__Disappeared *_p = soap_instantiate___ns1__Disappeared(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Disappeared(soap, _p); _p->ns1__Disappeared = ns1__Disappeared; } return _p; }

inline void soap_delete___ns1__Disappeared(struct soap *soap, struct __ns1__Disappeared *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__Disappeared(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__DisappearedResponse
#define SOAP_TYPE___ns1__DisappearedResponse (40)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__DisappearedResponse(struct soap*, struct __ns1__DisappearedResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__DisappearedResponse(struct soap*, const struct __ns1__DisappearedResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__DisappearedResponse(struct soap*, const char*, int, const struct __ns1__DisappearedResponse *, const char*);
SOAP_FMAC3 struct __ns1__DisappearedResponse * SOAP_FMAC4 soap_in___ns1__DisappearedResponse(struct soap*, const char*, struct __ns1__DisappearedResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__DisappearedResponse(struct soap*, const struct __ns1__DisappearedResponse *, const char*, const char*);

#ifndef soap_write___ns1__DisappearedResponse
#define soap_write___ns1__DisappearedResponse(soap, data) ( soap_begin(soap), soap_serialize___ns1__DisappearedResponse(soap, data), soap_begin_send(soap) || soap_put___ns1__DisappearedResponse(soap, data, "-ns1:DisappearedResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1__DisappearedResponse * SOAP_FMAC4 soap_get___ns1__DisappearedResponse(struct soap*, struct __ns1__DisappearedResponse *, const char*, const char*);

#ifndef soap_read___ns1__DisappearedResponse
#define soap_read___ns1__DisappearedResponse(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__DisappearedResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1__DisappearedResponse * SOAP_FMAC2 soap_instantiate___ns1__DisappearedResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__DisappearedResponse * soap_new___ns1__DisappearedResponse(struct soap *soap, int n = -1) { return soap_instantiate___ns1__DisappearedResponse(soap, n, NULL, NULL, NULL); }

inline struct __ns1__DisappearedResponse * soap_new_req___ns1__DisappearedResponse(struct soap *soap) { struct __ns1__DisappearedResponse *_p = soap_instantiate___ns1__DisappearedResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__DisappearedResponse(soap, _p); } return _p; }

inline struct __ns1__DisappearedResponse * soap_new_set___ns1__DisappearedResponse(struct soap *soap, _ns1__DisappearedResponse *ns1__DisappearedResponse) { struct __ns1__DisappearedResponse *_p = soap_instantiate___ns1__DisappearedResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__DisappearedResponse(soap, _p); _p->ns1__DisappearedResponse = ns1__DisappearedResponse; } return _p; }

inline void soap_delete___ns1__DisappearedResponse(struct soap *soap, struct __ns1__DisappearedResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__DisappearedResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__Accept
#define SOAP_TYPE___ns1__Accept (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__Accept(struct soap*, struct __ns1__Accept *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__Accept(struct soap*, const struct __ns1__Accept *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__Accept(struct soap*, const char*, int, const struct __ns1__Accept *, const char*);
SOAP_FMAC3 struct __ns1__Accept * SOAP_FMAC4 soap_in___ns1__Accept(struct soap*, const char*, struct __ns1__Accept *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__Accept(struct soap*, const struct __ns1__Accept *, const char*, const char*);

#ifndef soap_write___ns1__Accept
#define soap_write___ns1__Accept(soap, data) ( soap_begin(soap), soap_serialize___ns1__Accept(soap, data), soap_begin_send(soap) || soap_put___ns1__Accept(soap, data, "-ns1:Accept", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1__Accept * SOAP_FMAC4 soap_get___ns1__Accept(struct soap*, struct __ns1__Accept *, const char*, const char*);

#ifndef soap_read___ns1__Accept
#define soap_read___ns1__Accept(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__Accept(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1__Accept * SOAP_FMAC2 soap_instantiate___ns1__Accept(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__Accept * soap_new___ns1__Accept(struct soap *soap, int n = -1) { return soap_instantiate___ns1__Accept(soap, n, NULL, NULL, NULL); }

inline struct __ns1__Accept * soap_new_req___ns1__Accept(struct soap *soap) { struct __ns1__Accept *_p = soap_instantiate___ns1__Accept(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Accept(soap, _p); } return _p; }

inline struct __ns1__Accept * soap_new_set___ns1__Accept(struct soap *soap, _ns1__Accept *ns1__Accept) { struct __ns1__Accept *_p = soap_instantiate___ns1__Accept(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Accept(soap, _p); _p->ns1__Accept = ns1__Accept; } return _p; }

inline void soap_delete___ns1__Accept(struct soap *soap, struct __ns1__Accept *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__Accept(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__AcceptResponse
#define SOAP_TYPE___ns1__AcceptResponse (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__AcceptResponse(struct soap*, struct __ns1__AcceptResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__AcceptResponse(struct soap*, const struct __ns1__AcceptResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__AcceptResponse(struct soap*, const char*, int, const struct __ns1__AcceptResponse *, const char*);
SOAP_FMAC3 struct __ns1__AcceptResponse * SOAP_FMAC4 soap_in___ns1__AcceptResponse(struct soap*, const char*, struct __ns1__AcceptResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__AcceptResponse(struct soap*, const struct __ns1__AcceptResponse *, const char*, const char*);

#ifndef soap_write___ns1__AcceptResponse
#define soap_write___ns1__AcceptResponse(soap, data) ( soap_begin(soap), soap_serialize___ns1__AcceptResponse(soap, data), soap_begin_send(soap) || soap_put___ns1__AcceptResponse(soap, data, "-ns1:AcceptResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1__AcceptResponse * SOAP_FMAC4 soap_get___ns1__AcceptResponse(struct soap*, struct __ns1__AcceptResponse *, const char*, const char*);

#ifndef soap_read___ns1__AcceptResponse
#define soap_read___ns1__AcceptResponse(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__AcceptResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1__AcceptResponse * SOAP_FMAC2 soap_instantiate___ns1__AcceptResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__AcceptResponse * soap_new___ns1__AcceptResponse(struct soap *soap, int n = -1) { return soap_instantiate___ns1__AcceptResponse(soap, n, NULL, NULL, NULL); }

inline struct __ns1__AcceptResponse * soap_new_req___ns1__AcceptResponse(struct soap *soap) { struct __ns1__AcceptResponse *_p = soap_instantiate___ns1__AcceptResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__AcceptResponse(soap, _p); } return _p; }

inline struct __ns1__AcceptResponse * soap_new_set___ns1__AcceptResponse(struct soap *soap, _ns1__AcceptResponse *ns1__AcceptResponse) { struct __ns1__AcceptResponse *_p = soap_instantiate___ns1__AcceptResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__AcceptResponse(soap, _p); _p->ns1__AcceptResponse = ns1__AcceptResponse; } return _p; }

inline void soap_delete___ns1__AcceptResponse(struct soap *soap, struct __ns1__AcceptResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__AcceptResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__Exchange
#define SOAP_TYPE___ns1__Exchange (31)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__Exchange(struct soap*, struct __ns1__Exchange *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__Exchange(struct soap*, const struct __ns1__Exchange *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__Exchange(struct soap*, const char*, int, const struct __ns1__Exchange *, const char*);
SOAP_FMAC3 struct __ns1__Exchange * SOAP_FMAC4 soap_in___ns1__Exchange(struct soap*, const char*, struct __ns1__Exchange *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__Exchange(struct soap*, const struct __ns1__Exchange *, const char*, const char*);

#ifndef soap_write___ns1__Exchange
#define soap_write___ns1__Exchange(soap, data) ( soap_begin(soap), soap_serialize___ns1__Exchange(soap, data), soap_begin_send(soap) || soap_put___ns1__Exchange(soap, data, "-ns1:Exchange", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1__Exchange * SOAP_FMAC4 soap_get___ns1__Exchange(struct soap*, struct __ns1__Exchange *, const char*, const char*);

#ifndef soap_read___ns1__Exchange
#define soap_read___ns1__Exchange(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__Exchange(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1__Exchange * SOAP_FMAC2 soap_instantiate___ns1__Exchange(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__Exchange * soap_new___ns1__Exchange(struct soap *soap, int n = -1) { return soap_instantiate___ns1__Exchange(soap, n, NULL, NULL, NULL); }

inline struct __ns1__Exchange * soap_new_req___ns1__Exchange(struct soap *soap) { struct __ns1__Exchange *_p = soap_instantiate___ns1__Exchange(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Exchange(soap, _p); } return _p; }

inline struct __ns1__Exchange * soap_new_set___ns1__Exchange(struct soap *soap, _ns1__Exchange *ns1__Exchange) { struct __ns1__Exchange *_p = soap_instantiate___ns1__Exchange(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Exchange(soap, _p); _p->ns1__Exchange = ns1__Exchange; } return _p; }

inline void soap_delete___ns1__Exchange(struct soap *soap, struct __ns1__Exchange *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__Exchange(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__ExchangeResponse
#define SOAP_TYPE___ns1__ExchangeResponse (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__ExchangeResponse(struct soap*, struct __ns1__ExchangeResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__ExchangeResponse(struct soap*, const struct __ns1__ExchangeResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__ExchangeResponse(struct soap*, const char*, int, const struct __ns1__ExchangeResponse *, const char*);
SOAP_FMAC3 struct __ns1__ExchangeResponse * SOAP_FMAC4 soap_in___ns1__ExchangeResponse(struct soap*, const char*, struct __ns1__ExchangeResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__ExchangeResponse(struct soap*, const struct __ns1__ExchangeResponse *, const char*, const char*);

#ifndef soap_write___ns1__ExchangeResponse
#define soap_write___ns1__ExchangeResponse(soap, data) ( soap_begin(soap), soap_serialize___ns1__ExchangeResponse(soap, data), soap_begin_send(soap) || soap_put___ns1__ExchangeResponse(soap, data, "-ns1:ExchangeResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1__ExchangeResponse * SOAP_FMAC4 soap_get___ns1__ExchangeResponse(struct soap*, struct __ns1__ExchangeResponse *, const char*, const char*);

#ifndef soap_read___ns1__ExchangeResponse
#define soap_read___ns1__ExchangeResponse(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__ExchangeResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1__ExchangeResponse * SOAP_FMAC2 soap_instantiate___ns1__ExchangeResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__ExchangeResponse * soap_new___ns1__ExchangeResponse(struct soap *soap, int n = -1) { return soap_instantiate___ns1__ExchangeResponse(soap, n, NULL, NULL, NULL); }

inline struct __ns1__ExchangeResponse * soap_new_req___ns1__ExchangeResponse(struct soap *soap) { struct __ns1__ExchangeResponse *_p = soap_instantiate___ns1__ExchangeResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__ExchangeResponse(soap, _p); } return _p; }

inline struct __ns1__ExchangeResponse * soap_new_set___ns1__ExchangeResponse(struct soap *soap, _ns1__ExchangeResponse *ns1__ExchangeResponse) { struct __ns1__ExchangeResponse *_p = soap_instantiate___ns1__ExchangeResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__ExchangeResponse(soap, _p); _p->ns1__ExchangeResponse = ns1__ExchangeResponse; } return _p; }

inline void soap_delete___ns1__ExchangeResponse(struct soap *soap, struct __ns1__ExchangeResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__ExchangeResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__Appeared
#define SOAP_TYPE___ns1__Appeared (25)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__Appeared(struct soap*, struct __ns1__Appeared *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__Appeared(struct soap*, const struct __ns1__Appeared *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__Appeared(struct soap*, const char*, int, const struct __ns1__Appeared *, const char*);
SOAP_FMAC3 struct __ns1__Appeared * SOAP_FMAC4 soap_in___ns1__Appeared(struct soap*, const char*, struct __ns1__Appeared *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__Appeared(struct soap*, const struct __ns1__Appeared *, const char*, const char*);

#ifndef soap_write___ns1__Appeared
#define soap_write___ns1__Appeared(soap, data) ( soap_begin(soap), soap_serialize___ns1__Appeared(soap, data), soap_begin_send(soap) || soap_put___ns1__Appeared(soap, data, "-ns1:Appeared", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1__Appeared * SOAP_FMAC4 soap_get___ns1__Appeared(struct soap*, struct __ns1__Appeared *, const char*, const char*);

#ifndef soap_read___ns1__Appeared
#define soap_read___ns1__Appeared(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__Appeared(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1__Appeared * SOAP_FMAC2 soap_instantiate___ns1__Appeared(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__Appeared * soap_new___ns1__Appeared(struct soap *soap, int n = -1) { return soap_instantiate___ns1__Appeared(soap, n, NULL, NULL, NULL); }

inline struct __ns1__Appeared * soap_new_req___ns1__Appeared(struct soap *soap) { struct __ns1__Appeared *_p = soap_instantiate___ns1__Appeared(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Appeared(soap, _p); } return _p; }

inline struct __ns1__Appeared * soap_new_set___ns1__Appeared(struct soap *soap, _ns1__Appeared *ns1__Appeared) { struct __ns1__Appeared *_p = soap_instantiate___ns1__Appeared(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Appeared(soap, _p); _p->ns1__Appeared = ns1__Appeared; } return _p; }

inline void soap_delete___ns1__Appeared(struct soap *soap, struct __ns1__Appeared *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__Appeared(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__AppearedResponse
#define SOAP_TYPE___ns1__AppearedResponse (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__AppearedResponse(struct soap*, struct __ns1__AppearedResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__AppearedResponse(struct soap*, const struct __ns1__AppearedResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__AppearedResponse(struct soap*, const char*, int, const struct __ns1__AppearedResponse *, const char*);
SOAP_FMAC3 struct __ns1__AppearedResponse * SOAP_FMAC4 soap_in___ns1__AppearedResponse(struct soap*, const char*, struct __ns1__AppearedResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__AppearedResponse(struct soap*, const struct __ns1__AppearedResponse *, const char*, const char*);

#ifndef soap_write___ns1__AppearedResponse
#define soap_write___ns1__AppearedResponse(soap, data) ( soap_begin(soap), soap_serialize___ns1__AppearedResponse(soap, data), soap_begin_send(soap) || soap_put___ns1__AppearedResponse(soap, data, "-ns1:AppearedResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1__AppearedResponse * SOAP_FMAC4 soap_get___ns1__AppearedResponse(struct soap*, struct __ns1__AppearedResponse *, const char*, const char*);

#ifndef soap_read___ns1__AppearedResponse
#define soap_read___ns1__AppearedResponse(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__AppearedResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1__AppearedResponse * SOAP_FMAC2 soap_instantiate___ns1__AppearedResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__AppearedResponse * soap_new___ns1__AppearedResponse(struct soap *soap, int n = -1) { return soap_instantiate___ns1__AppearedResponse(soap, n, NULL, NULL, NULL); }

inline struct __ns1__AppearedResponse * soap_new_req___ns1__AppearedResponse(struct soap *soap) { struct __ns1__AppearedResponse *_p = soap_instantiate___ns1__AppearedResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__AppearedResponse(soap, _p); } return _p; }

inline struct __ns1__AppearedResponse * soap_new_set___ns1__AppearedResponse(struct soap *soap, _ns1__AppearedResponse *ns1__AppearedResponse) { struct __ns1__AppearedResponse *_p = soap_instantiate___ns1__AppearedResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__AppearedResponse(soap, _p); _p->ns1__AppearedResponse = ns1__AppearedResponse; } return _p; }

inline void soap_delete___ns1__AppearedResponse(struct soap *soap, struct __ns1__AppearedResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__AppearedResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (68)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin(soap), soap_serialize_PointerToSOAP_ENV__Reason(soap, data), soap_begin_send(soap) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (67)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin(soap), soap_serialize_PointerToSOAP_ENV__Detail(soap, data), soap_begin_send(soap) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (62)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin(soap), soap_serialize_PointerToSOAP_ENV__Code(soap, data), soap_begin_send(soap) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#endif

#ifndef SOAP_TYPE_PointerTo_ns1__Disappeared
#define SOAP_TYPE_PointerTo_ns1__Disappeared (41)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__Disappeared(struct soap*, _ns1__Disappeared *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__Disappeared(struct soap*, const char *, int, _ns1__Disappeared *const*, const char *);
SOAP_FMAC3 _ns1__Disappeared ** SOAP_FMAC4 soap_in_PointerTo_ns1__Disappeared(struct soap*, const char*, _ns1__Disappeared **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__Disappeared(struct soap*, _ns1__Disappeared *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__Disappeared
#define soap_write_PointerTo_ns1__Disappeared(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1__Disappeared(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1__Disappeared(soap, data, "ns1:Disappeared", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__Disappeared ** SOAP_FMAC4 soap_get_PointerTo_ns1__Disappeared(struct soap*, _ns1__Disappeared **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__Disappeared
#define soap_read_PointerTo_ns1__Disappeared(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__Disappeared(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__DisappearedResponse
#define SOAP_TYPE_PointerTo_ns1__DisappearedResponse (38)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__DisappearedResponse(struct soap*, _ns1__DisappearedResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__DisappearedResponse(struct soap*, const char *, int, _ns1__DisappearedResponse *const*, const char *);
SOAP_FMAC3 _ns1__DisappearedResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__DisappearedResponse(struct soap*, const char*, _ns1__DisappearedResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__DisappearedResponse(struct soap*, _ns1__DisappearedResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__DisappearedResponse
#define soap_write_PointerTo_ns1__DisappearedResponse(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1__DisappearedResponse(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1__DisappearedResponse(soap, data, "ns1:DisappearedResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__DisappearedResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__DisappearedResponse(struct soap*, _ns1__DisappearedResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__DisappearedResponse
#define soap_read_PointerTo_ns1__DisappearedResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__DisappearedResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__Accept
#define SOAP_TYPE_PointerTo_ns1__Accept (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__Accept(struct soap*, _ns1__Accept *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__Accept(struct soap*, const char *, int, _ns1__Accept *const*, const char *);
SOAP_FMAC3 _ns1__Accept ** SOAP_FMAC4 soap_in_PointerTo_ns1__Accept(struct soap*, const char*, _ns1__Accept **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__Accept(struct soap*, _ns1__Accept *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__Accept
#define soap_write_PointerTo_ns1__Accept(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1__Accept(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1__Accept(soap, data, "ns1:Accept", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__Accept ** SOAP_FMAC4 soap_get_PointerTo_ns1__Accept(struct soap*, _ns1__Accept **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__Accept
#define soap_read_PointerTo_ns1__Accept(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__Accept(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__AcceptResponse
#define SOAP_TYPE_PointerTo_ns1__AcceptResponse (32)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__AcceptResponse(struct soap*, _ns1__AcceptResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__AcceptResponse(struct soap*, const char *, int, _ns1__AcceptResponse *const*, const char *);
SOAP_FMAC3 _ns1__AcceptResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__AcceptResponse(struct soap*, const char*, _ns1__AcceptResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__AcceptResponse(struct soap*, _ns1__AcceptResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__AcceptResponse
#define soap_write_PointerTo_ns1__AcceptResponse(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1__AcceptResponse(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1__AcceptResponse(soap, data, "ns1:AcceptResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__AcceptResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__AcceptResponse(struct soap*, _ns1__AcceptResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__AcceptResponse
#define soap_read_PointerTo_ns1__AcceptResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__AcceptResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__Exchange
#define SOAP_TYPE_PointerTo_ns1__Exchange (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__Exchange(struct soap*, _ns1__Exchange *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__Exchange(struct soap*, const char *, int, _ns1__Exchange *const*, const char *);
SOAP_FMAC3 _ns1__Exchange ** SOAP_FMAC4 soap_in_PointerTo_ns1__Exchange(struct soap*, const char*, _ns1__Exchange **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__Exchange(struct soap*, _ns1__Exchange *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__Exchange
#define soap_write_PointerTo_ns1__Exchange(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1__Exchange(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1__Exchange(soap, data, "ns1:Exchange", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__Exchange ** SOAP_FMAC4 soap_get_PointerTo_ns1__Exchange(struct soap*, _ns1__Exchange **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__Exchange
#define soap_read_PointerTo_ns1__Exchange(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__Exchange(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__ExchangeResponse
#define SOAP_TYPE_PointerTo_ns1__ExchangeResponse (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__ExchangeResponse(struct soap*, _ns1__ExchangeResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__ExchangeResponse(struct soap*, const char *, int, _ns1__ExchangeResponse *const*, const char *);
SOAP_FMAC3 _ns1__ExchangeResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__ExchangeResponse(struct soap*, const char*, _ns1__ExchangeResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__ExchangeResponse(struct soap*, _ns1__ExchangeResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__ExchangeResponse
#define soap_write_PointerTo_ns1__ExchangeResponse(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1__ExchangeResponse(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1__ExchangeResponse(soap, data, "ns1:ExchangeResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__ExchangeResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__ExchangeResponse(struct soap*, _ns1__ExchangeResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__ExchangeResponse
#define soap_read_PointerTo_ns1__ExchangeResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__ExchangeResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__Appeared
#define SOAP_TYPE_PointerTo_ns1__Appeared (23)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__Appeared(struct soap*, _ns1__Appeared *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__Appeared(struct soap*, const char *, int, _ns1__Appeared *const*, const char *);
SOAP_FMAC3 _ns1__Appeared ** SOAP_FMAC4 soap_in_PointerTo_ns1__Appeared(struct soap*, const char*, _ns1__Appeared **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__Appeared(struct soap*, _ns1__Appeared *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__Appeared
#define soap_write_PointerTo_ns1__Appeared(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1__Appeared(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1__Appeared(soap, data, "ns1:Appeared", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__Appeared ** SOAP_FMAC4 soap_get_PointerTo_ns1__Appeared(struct soap*, _ns1__Appeared **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__Appeared
#define soap_read_PointerTo_ns1__Appeared(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__Appeared(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__AppearedResponse
#define SOAP_TYPE_PointerTo_ns1__AppearedResponse (19)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__AppearedResponse(struct soap*, _ns1__AppearedResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__AppearedResponse(struct soap*, const char *, int, _ns1__AppearedResponse *const*, const char *);
SOAP_FMAC3 _ns1__AppearedResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__AppearedResponse(struct soap*, const char*, _ns1__AppearedResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__AppearedResponse(struct soap*, _ns1__AppearedResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__AppearedResponse
#define soap_write_PointerTo_ns1__AppearedResponse(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1__AppearedResponse(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1__AppearedResponse(soap, data, "ns1:AppearedResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__AppearedResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__AppearedResponse(struct soap*, _ns1__AppearedResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__AppearedResponse
#define soap_read_PointerTo_ns1__AppearedResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__AppearedResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_begin(soap), soap_serialize__QName(soap, data), soap_begin_send(soap) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_begin(soap), soap_serialize_string(soap, data), soap_begin_send(soap) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#endif

/* End of soapH.h */
